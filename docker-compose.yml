version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: neuraroute-postgres
    environment:
      POSTGRES_DB: neuraroute
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: neuraroute123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - neuraroute-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d neuraroute"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: neuraroute-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - neuraroute-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: neuraroute-backend
    env_file:
      - ./.env
    environment:
      - DATABASE_URL=postgresql://postgres:neuraroute123@postgres:5432/neuraroute
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - SIMULATION_TICK_INTERVAL=900
      - AGENT_CYCLE_INTERVAL=60
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - neuraroute-network
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: neuraroute-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_MAPBOX_TOKEN=${MAPBOX_TOKEN}
      - REACT_APP_WS_URL=ws://localhost:8000/ws
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - neuraroute-network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: neuraroute-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@neuraroute.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - neuraroute-network
    profiles:
      - tools

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: neuraroute-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - neuraroute-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  neuraroute-network:
    driver: bridge 